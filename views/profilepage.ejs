<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fusion Network - Profile</title>
    <link rel="icon" type="icon/x-icon" href="img/logo.webp" />  
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap');

        :root {
            --primary: #a78bfa;
            --secondary: #4ade80;
            --background: #111827;
            --surface: #1f2937;
            --text: #e5e7eb;
            --text-secondary: #9ca3af;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: url('bg.webp') no-repeat center center fixed;
            background-size: cover;
            color: var(--text);
            line-height: 1.6;
            overflow-x: hidden;
        }

        .container {
            width: 90%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem 20px;
        }

        header {
            background-color: rgba(31, 41, 55, 0.8);
            backdrop-filter: blur(10px);
            border-radius: 1rem;
            margin-bottom: 2rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 2rem;
        }

        .logo {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--primary);
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .nav-links {
            display: flex;
            gap: 1.5rem;
        }

        .nav-links a {
            color: var(--text);
            text-decoration: none;
            font-weight: 600;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            transition: color 0.3s ease, background-color 0.3s ease;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
        }

        .nav-links a:hover, .nav-links a.active {
            color: var(--primary);
            background-color: rgba(167, 139, 250, 0.1);
        }

        .profile-container {
            background-color: rgba(31, 41, 55, 0.8);
            backdrop-filter: blur(10px);
            border-radius: 1rem;
            padding: 2rem;
            margin-bottom: 2rem;
        }

        .profile-header {
            text-align: center;
            margin-bottom: 2rem;
        }

        .profile-header h1 {
            font-size: 2.5rem;
            background: linear-gradient(to right, var(--primary), var(--secondary));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 0.5rem;
        }

        .profile-content {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 2rem;
        }

        .profile-image {
            width: 180px;
            height: 180px;
            border-radius: 50%;
            overflow: hidden;
            border: 4px solid var(--primary);
        }

        .profile-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .profile-info {
            text-align: center;
            max-width: 400px;
            width: 100%;
        }

        .profile-info h2 {
            font-size: 1.8rem;
            margin-bottom: 1rem;
            color: var(--primary);
        }

        .profile-info p {
            margin-bottom: 1.5rem;
            font-size: 1.1rem;
        }

        .profile-form {
            width: 100%;
            max-width: 400px;
        }

        .profile-form h3 {
            font-size: 1.4rem;
            margin-bottom: 1rem;
            color: var(--secondary);
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group input {
            width: 100%;
            padding: 0.75rem;
            font-size: 1rem;
            border-radius: 0.5rem;
            background-color: var(--surface);
            color: var(--text);
            border: 1px solid var(--text-secondary);
        }

        .form-group button {
            width: 100%;
            padding: 0.75rem;
            font-size: 1rem;
            border-radius: 0.5rem;
            background-color: var(--primary);
            color: var(--background);
            border: none;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .form-group button:hover {
            background-color: var(--secondary);
        }

        #updateMessage {
            margin-top: 1rem;
            font-size: 0.9rem;
            color: var(--text-secondary);
        }

        .logout-btn {
            display: inline-block;
            margin-top: 1.5rem;
            padding: 0.75rem 1.5rem;
            font-size: 1rem;
            border-radius: 0.5rem;
            background-color: #ef4444;
            color: var(--text);
            text-decoration: none;
            transition: background-color 0.3s ease;
        }

        .logout-btn:hover {
            background-color: #dc2626;
        }

        footer {
            background-color: rgba(31, 41, 55, 0.8);
            backdrop-filter: blur(10px);
            text-align: center;
            padding: 1rem 0;
            border-radius: 1rem;
        }
        


        @media (min-width: 768px) {
            .profile-content {
                flex-direction: row;
                align-items: flex-start;
            }

            .profile-info, .profile-form {
                text-align: left;
            }
        }
        
.burger {
    display: none;
    background: none;
    border: none;
    color: var(--text);
    font-size: 1.5rem;
    cursor: pointer;
}


@media (max-width: 768px) {
    .nav-links {
        display: none;
        flex-direction: column;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(31, 41, 55, 0.95);
        backdrop-filter: blur(10px);
        padding: 4rem 1rem 1rem;
        z-index: 1000;
    }

    .nav-links.show {
        display: flex;
    }

    .burger {
        display: block;
        position: relative;
        z-index: 1001;
    }
}


    </style>
</head>
<body>
    <div class="container">
        <header>
            <nav>
                <a href="index.html" class="logo">
                    <img src="img/logo.webp" alt="Fusion Network Logo" style="width: 30px; height: 30px;">
                    Fusion Network
                </a>
                <div class="nav-links" id="navLinks">
                    <a href="index.html">Home</a>
                    <a href="/forums" class="">Forums</a>
                    <a href="/apply-staff">Staff Apply</a>
                    <a href="/notices" >Notices</a>
                    <a href="/profilepage.html" class="active">
                        <img src="https://mc-heads.net/avatar/steve/24" alt="Steve Head" style="width: 24px; height: 24px; border-radius: 4px; vertical-align: middle; margin-right: 5px;">
                        Profile
                    </a>
                </div>
                <button class="burger" id="burger" aria-label="Toggle menu">â˜°</button>
            </nav>
        </header>

        <main class="profile-container">
            <div class="profile-header">
                <h1>Your Profile</h1>
            </div>  
            <div class="profile-content">
                <div class="profile-image">
                    <img src="https://mc-heads.net/avatar/steve/150" alt="Profile Picture">
                </div>
                <div class="profile-info">
                    <% if (user) { %>
                        <% if (role === 'admin') { %>
                            <script>window.location.href = "/admin";</script>
                        <% } else if (role === 'moderator') { %>
                            <script>window.location.href = "/moderator";</script>
                        <% } else { %>
                            <h2>Welcome, <span id="username"><%= user %></span>!</h2>
                            <p>Your Role: <b><%= role %></b></p>
                            <div class="profile-form">
                                <h3>Update Username</h3>
                                <form id="updateUsernameForm">
                                    <div class="form-group">
                                        <input type="text" id="newUsername" name="newUsername" placeholder="New Username" required />
                                    </div>
                                    <div class="form-group">
                                        <button type="submit">Update Username</button>
                                    </div>
                                </form>
                                <p id="updateMessage"></p>
                                <a href="/logout" class="logout-btn">Logout</a>
                            </div>
                        <% } %>
                    <% } else { %>
                        <p>You are not logged in. Please <a href="login.html">login here</a>.</p>
                    <% } %>
                </div>
            </div>
        </main>

        <footer>
            <p>&copy; 2024 Fusion Network. All rights reserved.</p>
        </footer>
    </div>

    <!-- JavaScript -->
    <script>
        document.getElementById('updateUsernameForm').addEventListener('submit', async function (event) {
            event.preventDefault();
            const newUsername = document.getElementById('newUsername').value;

            try {
                const response = await fetch('/update-username', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ newUsername })
                });

                const result = await response.json();
                const messageDiv = document.getElementById('updateMessage');

                if (result.success) {
                    messageDiv.innerText = result.message;
                    alert(result.message);
                } else if (result.remainingTime) {
                    startCountdown(result.remainingTime);
                    messageDiv.innerText = result.message;
                } else {
                    messageDiv.innerText = result.message;
                }
            } catch (error) {
                console.error('Error updating username:', error);
            }
        });

        function startCountdown(timeRemaining) {
            const countdownDiv = document.getElementById('updateMessage');
            let countdown = timeRemaining / 1000;

            const interval = setInterval(() => {
                const days = Math.floor(countdown / (60 * 60 * 24));
                const hours = Math.floor((countdown % (60 * 60 * 24)) / (60 * 60));
                const minutes = Math.floor((countdown % (60 * 60)) / 60);
                const seconds = Math.floor(countdown % 60);

                countdownDiv.innerText = `You can change your username in: ${days}d ${hours}h ${minutes}m ${seconds}s`;

                countdown--;

                if (countdown < 0) {
                    clearInterval(interval);
                    countdownDiv.innerText = '';
                }
            }, 1000);
        }
         
    </script>
         <script> 
            const burger = document.getElementById('burger');
                   const navLinks = document.getElementById('navLinks');
                   const mainContent = document.querySelector('main');
           
                   burger.addEventListener('click', () => {
                       navLinks.classList.toggle('show');
                       document.body.classList.toggle('menu-open');
                       burger.textContent = navLinks.classList.contains('show') ? 'âœ•' : 'â˜°';
                       
                       if (navLinks.classList.contains('show')) {
                           setTimeout(() => {
                               mainContent.style.visibility = 'hidden';
                           }, 300);
                       } else {
                           mainContent.style.visibility = 'visible';
                       }
                   });
           
                   // Smooth scrolling for navigation links
                   document.querySelectorAll('a[href^="#"]').forEach(anchor => {
                       anchor.addEventListener('click', function (e) {
                           e.preventDefault();
                           document.querySelector(this.getAttribute('href')).scrollIntoView({
                               behavior: 'smooth'
                           });
                       });
                   });
             
           </script>
</body>
</html>